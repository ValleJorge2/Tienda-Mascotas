apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
        - name: django
          image: core-django:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: django-config
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
---
apiVersion: v1
kind: Service
metadata:
  name: django
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: django
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cart
  template:
    metadata:
      labels:
        app: cart
    spec:
      containers:
        - name: cart
          image: core-cart:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8001
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: core.settings
            - name: SERVICE_NAME
              value: cart
          command: ["python", "manage.py", "runserver", "0.0.0.0:8001"]
---
apiVersion: v1
kind: Service
metadata:
  name: cart
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8001
      targetPort: 8001
  selector:
    app: cart
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products
  template:
    metadata:
      labels:
        app: products
    spec:
      containers:
        - name: products
          image: core-products:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8002
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: core.settings
            - name: SERVICE_NAME
              value: products
          command: ["python", "manage.py", "runserver", "0.0.0.0:8002"]
---
apiVersion: v1
kind: Service
metadata:
  name: products
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8002
      targetPort: 8002
  selector:
    app: products
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
  template:
    metadata:
      labels:
        app: reviews
    spec:
      containers:
        - name: reviews
          image: core-reviews:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8003
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: core.settings
            - name: SERVICE_NAME
              value: reviews
          command: ["python", "manage.py", "runserver", "0.0.0.0:8003"]
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8003
      targetPort: 8003
  selector:
    app: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
        - name: orders
          image: core-orders:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8004
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: core.settings
            - name: SERVICE_NAME
              value: orders
          command: ["python", "manage.py", "runserver", "0.0.0.0:8004"]
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8004
      targetPort: 8004
  selector:
    app: orders
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: categories
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: categories
  template:
    metadata:
      labels:
        app: categories
    spec:
      containers:
        - name: categories
          image: core-categories:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8005
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: core.settings
            - name: SERVICE_NAME
              value: categories
          command: ["python", "manage.py", "runserver", "0.0.0.0:8005"]
---
apiVersion: v1
kind: Service
metadata:
  name: categories
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8005
      targetPort: 8005
  selector:
    app: categories
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: mascotas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          image: core-users:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8006
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: core.settings
            - name: SERVICE_NAME
              value: users
          command: ["python", "manage.py", "runserver", "0.0.0.0:8006"]
---
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: mascotas
spec:
  type: ClusterIP
  ports:
    - port: 8006
      targetPort: 8006
  selector:
    app: users